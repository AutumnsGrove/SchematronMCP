[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "schematron-mcp"
version = "0.1.0"
description = "MCP server for Schematron-3B: Extract structured JSON from HTML"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Schematron MCP Contributors"}
]
keywords = ["mcp", "schematron", "html", "json", "extraction", "mlx"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "mcp>=0.9.0",
    "openai>=1.0.0",
    "gradio>=4.0.0",
    "httpx>=0.25.0",
    "lxml>=4.9.0",
    "lxml_html_clean>=0.4.0",
    "pydantic>=2.0.0",
    "json-repair>=0.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "mlx-lm>=0.19.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/schematron-mcp"
Documentation = "https://github.com/yourusername/schematron-mcp/blob/main/README.md"
Repository = "https://github.com/yourusername/schematron-mcp"
Issues = "https://github.com/yourusername/schematron-mcp/issues"

[project.scripts]
schematron-mcp = "server:main"

[tool.setuptools]
py-modules = ["server", "lm_studio_inference", "mlx_inference", "html_cleaner", "example_schemas", "gradio_app"]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "F", "I", "N", "W"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
